polar scratch 3


// var test = $.ajax({
// 	method: "POST",
// 	async: false,
// 	url: "http://localhost/b/jsonrequest",
// 	data: {
// 		"jsonParam": JSON.stringify(sumcurrent)
// 	}
// })


// // POLAR EXPERIMENTS


// var d;
// var id = localStorage.getItem('dp-tv-id');
// var dt1 = $("#dt1").val();
// var dt2 = $("#dt2").val();
//
//
// var sumcurrent = {
//     "method":"getTableData",
//     "id":1,
//     "params": {
// 	    "table":"Sum Currents",
// 	    "format":"polar",
// 	    "startTime": dt1,
// 	    "endTime": dt2,
// 	    "entityId":id
//     }
// }
//
//
// var ip = {
//     entityId: id,
//     startTime: dt1,
//     endTime: dt2,
//     format: "chart",
//     number: null
// };
//
// ip["table"] = DATA_VIEW.BushingSetCurrent;
// ajaxCall({
// 	method: DATA_METHOD.TableData,
// 	input: ip,
// 	ctrlInput: {
//  			selector: "#chart-tcm",
//     	y2: "Bushing 3"
//  		}
// });
//
//
// //
// //

// function loadCurrentPhasors() {
	// var d;
    //
	// var latestPhasors = {
	// 	"method":"getBushingSetPhasors",
	// 	"id":1,
	// 	"params": {
	// 		"descending":true,
	// 		"limit":1,
	// 		"format":"polar",
	// 		"entityId":11   // 11 for DRAX for demo - on dobleprime.com analytics 11
	// 	}
	// }
    //
	// $.ajax({
	// 	method: "POST",
	// 	async: false,
	// 	url: "dp.py/jsonRpcRequest",
	// 	data: {
	// 		"jsonParam": JSON.stringify(latestPhasors)
	// 	}
	// })
	// .done( function(dt) {
	// 	d = JSON.parse(dt);
	// 	$.each(d.result.data, function(i, v) {
	// 		v["geometry"] = "DotPlot";
	// 	})
	// })
	// .fail( function(err) {
	// 	message("Error", "Failed to get getBushingSetPhasors data for the Polar Chart", MESSAGE_TYPE.Error);
	// });



//
// function loadPolarGrid() {
// 	var dt4 = {
// 		"columns" : [
// 		   {
// 	          "title" : "Date/Time Stamp"
// 	       },
// 		   {
// 	          "title" : "Magnitude"
// 	       },
// 			 {
// 			 		 "title" : "Phase °"
// 			 	}
// 	    ],
// 	   "data" : [
// 		  [ "-Tap1", 61.954, 120.045],
// 		  [ "-Tap2", 62.283, 0],
// 		  [ "-Tap3", 62.621, 240.07],
// 			[ "Sum", 1.01, 184.3]
// 	   ],
// 	   "meta" : {
// 	      "title" : "Current Measurements"
// 	   }
//    	};
//
// 	refreshGrid({
// 		data: JSON.stringify(dt4),
// 		"sort": false,
// 		"dom": "t",
// 		selector: "#grid-polar1"
// 	});
//
// 	var dt5 = {
// 		"columns" : [
// 		   {
// 	          "title" : "Date/Time Stamp"
// 	       },
// 		   {
// 	          "title" : "Magnitude"
// 	       },
// 			 {
// 			 		 "title" : "Phase °"
// 			 	}
// 	    ],
// 	   "data" : [
// 		  [ "-Tap1", 400.12, 121.52],
// 		  [ "-Tap2", 400.27, 0.94],
// 		  [ "-Tap3", 400.48, 241.22],
// 			[ "Sum", 3.76, 272.13]
// 	   ],
// 	   "meta" : {
// 	      "title" : "Voltage Measurements"
// 	   }
//    	};
//
// 	refreshGrid({
// 		data: JSON.stringify(dt5),
// 		"sort": false,
// 		"dom": "t",
// 		selector: "#grid-polar2"
// 	});
//
// 	var dt6 = {
// 		"columns" : [
// 		   {
// 	          "title" : "Date/Time Stamp"
// 	       },
// 		   {
// 	          "title" : "Magnitude"
// 	       },
// 			 {
// 			 		 "title" : "Phase °"
// 			 	}
// 	    ],
// 	   "data" : [
// 		  [ "-Tap1", 6.46, 1.47],
// 		  [ "-Tap2", 6.43, .94],
// 		  [ "-Tap3", 6.40, 1.15],
// 			[ "Sum", 4.95, 5.00]
// 	   ],
// 		//  "data" : [
// 		//   [ "-Tap1", "(Vm-1)/(Im-1)", "(Vph-1)-(Iph-1)"],
// 		//   [ "-Tap2", "(Vm-2)/(Im-2)", "(Vph-2)-(Iph-2)"],
// 		//   [ "-Tap3", "(Vm-3)/(Im-3)", "(Vph-3)-(Iph-3)"],
// 		//   [ "Sum", "(Vm-s)/(Im-s)", "(Vph-s)-(Iph-s)"]
// 		//  ],
//
// 	   "meta" : {
// 	      "title" : "V/I Ratio"
// 	   }
//    	};
//
//
// 	refreshGrid({
// 		data: JSON.stringify(dt6),
// 		"sort": false,
// 		"dom": "t",
// 		selector: "#grid-polar3"
// 	});
// }
//
// function loadCurrentVoltagePhasors() {
// 		var config = {
// 		  "data": [
// 		  {
// 		    "t": [120, 0, 240],
// 		    "r": [8, 10, 15],
// 		    "name": "Current Phasors",
// 		    "color": "blue",
// 		    "geometry": "DotPlot",
// 		  },
// 		  {
// 		    "t": [118, 2, 250],
// 		    "r": [9, 12, 15],
// 		    "name": "Voltage Phasors",
// 		    "color": "purple",
// 		    "geometry": "DotPlot",
// 		  }],
// 		  "layout": {
// 		    "radialAxis": {
// 		      "domain": [0,20],
// 		      "orientation": -45,
// 		      "tickOrientation": 'horizontal',
// 		      "ticksSuffix": "mA"
// 		    },
// 		    "angularAxis": {
// 		      "domain": [0,360],
// 		      "tickOrientation": "horizontal",
// 		      "ticksSuffix": "°"
// 		    },
// 				"direction": "counterclockwise",
// 		    "labelOffset": 15,
// 		  },
// 		};
// 		micropolar.Axis()
// 		  .config(config)
// 		  .render(d3.select('#chart-sub-polar4'));
//
// }
//
//
//
//
// function loadPolarExperiment() {
// 	var art1 = artGenerator({m: 2, n1: 1, n2: 30, n3: 3, a: 1, b: 1});
// 	var art2 = artGenerator({m: 10, n1: 4, n2: -10, n3: 50, a: 1, b: 1});
// 	var art3 = artGenerator({m: 10, n1: 3, n2: 0.6, n3: 0, a: 1, b: 1});
// 	var configs = [
// 		{data: [
//         {t: art1.x, r: art1.y, geometry: µ.DOT, name: 'V1', dotSize: 35, opacity: 0.8},
// 			  {t: art2.x, r: art2.y, geometry: "DotPlot", name: 'V2', dotSize: 35, opacity: 0.8},
// 			  {t: art3.x, r: art3.y, geometry: "DotPlot", name: 'V3', dotSize: 35, opacity: 0.8}],
// 			  layout: {
//           title: '',
//           margin: {top: 0, bottom: 0, left: 30, right: 30},
//           angularAxis: {visible: true, ticksSuffix: "°"	},
//           radialAxis: {visible: true, ticksSuffix: "mA"	},
//           "direction": "counterclockwise",
//           "labelOffset": 15,
//         }},
// 	];
// 	configs.forEach(function(_config){
// 		var config = {layout: {width: 400, height: 450}};
// 		µ.util.deepExtend(config, _config);
// 		micropolar.Axis().config(config).render(d3.select('#chart-sub-polar5'));
// 	});
// }
// //    math art for experiment chart
// function artGenerator(params) {
//   var n = 360, step = 1, i = -1, r = 0, dt = 2 * Math.PI / n, t, x, y, points = {x: [], y: []};
//   d3.range(0, 360, 3).forEach(function(d, i){
// 	t = params.m * (d * dt - Math.PI) / 4;
// 	t = Math.pow(Math.abs(Math.pow(Math.abs(Math.cos(t) / params.a), params.n2) + Math.pow(Math.abs(Math.sin(t) / params.b), params.n3)), -1 / params.n1);
// 	if (t > r) r = t;
// 	points.x.push(Math.round(d*100)/100);
// 	points.y.push(t);
//   });
//   points.y = points.y.map(function(d, i){ return Math.round(d / r*100)/100; });
//   return points;
// }
//
//
//
// // POLAR DOCS
// function loadPolarDocs() {
// 	var config = {
// 	    "data": [{
// 	        "t": ["a", "b", "c", "d"], // theta values (x axis)
// 	        "r": [5, 10, 15, 20], // radial values (y axis)
// 	        "name": "AreaChart", // name for the legend
// 	        "visible": true,
// 	        "color": "lime", // color of data element
// 	        "opacity": 0.8,
// 	        "strokeColor": "red",
// 	        "strokeDash": "dash", // solid, dot, dash (default)
// 	        "strokeSize": 5,
// 	        "visibleInLegend": true,
// 	        "geometry": "AreaChart" // AreaChart, BarChart, DotPlot, LinePlot (default)
// 	    }, {
// 	        "t": ["a", "b", "c", "d"],
// 	        "r": [10, 20, 30, 40],
// 	        "name": "Bar Chart",
// 	        "color": "orange",
// 	        "geometry": "BarChart"
// 	    }, {
// 	        "t": ["a", "b", "c", "d"],
// 	        "r": [10, 20, 30, 40],
// 	        "name": "DotPlot",
// 	        "color": "red",
// 	        "dotType": "triangle-down", // LinePlot only, cross, diamond, square, triangle-down, triangle-up, circle (default)
// 	        "dotSize": 512, // in square pixels https://github.com/mbostock/d3/wiki/SVG-Shapes#symbol_size
// 	        "geometry": "DotPlot"
// 	    }, {
// 	        "t": ["a", "b", "c", "d"],
// 	        "r": [10, 20, 30, 40],
// 	        "name": "LinePlot",
// 	        "color": "none",
// 	        "strokeColor": "red",
// 	        "geometry": "LinePlot",
// 	        "groupId": 0 // when you want to stack geometry, set the same groupId
// 	    }, {
// 	        "t": ["a", "b", "c", "d"],
// 	        "r": [10, 20, 30, 40],
// 	        "name": "LinePlot2",
// 	        "color": "none",
// 	        "strokeColor": "green",
// 	        "geometry": "LinePlot",
// 	        "dotVisible": true,
// 	        "groupId": 0
// 	    }],
// 	    "layout": {
// 	        "title": "Title", // (default: null)
// 	        "height": 600, // (default: 450)
// 	        "width": 500, // (default: 500)
// 	        "font": { // axes labels font
// 	            "size": 12, // (default:12)
// 	            "color": "orange", // (default: gray)
// 	            "family": "Tahoma, sans-serif", // (default: "Tahoma, sans-serif")
// 	            "outlineColor": "red" // (default: white)
// 	        },
// 	        "direction": "counterclockwise", // clockwise (default), counterclockwise
// 	        "orientation": 10, // 0-360 (default: 0, starts at 3 O'clock)
// 	        "opacity": 0.8, // 0-1 (default: 1)
// 	        "legend": {
// 	            "reverseOrder": false // true|false (default: false)
// 	        },
// 	        "showLegend": true, // (default: true)
// 	        "margin": { // in pixel (default: 40)
// 	            "top": 60,
// 	            "right": 60,
// 	            "bottom": 30,
// 	            "left": 60
// 	        },
// 	        "backgroundColor": "ghostwhite", // (default: none)
// 	        "radialAxis": {
// 	            "domain": µ.DATAEXTENT, // µ.DATAEXTENT alias for null (default) | [min, max] as floats
// 	            "orientation": -45, // 0-360 (default: 0)
// 	            "visible": true, // true|false (default: true)
// 	            "gridLinesVisible": true, // true|false (default: true)
// 	            "tickOrientation": 'angular', // 'angular', 'horizontal' (default)
// 	            "ticksSuffix": "mA" // string (default: '')
// 	        },
// 	        "angularAxis": {
// 	            "domain": null, // µ.DATAEXTENT alias for null (default) | [min, max] as floats
// 	            "visible": true, // true|false (default: true)
// 	            "gridLinesVisible": true, // true|false (default: true)
// 	            "labelsVisible": true, // true|false (default: true)
// 	            "tickOrientation": "radial", // radial, angular, horizontal (default)
// 	            "ticksSuffix": "°" // string (default: '')
// 	        },
// 	        "labelOffset": 20, // in pixel (default: 10)
// 	        "defaultColorRange": [ // used by geometries
// 	          "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
// 	        ],
// 	        "tickLength": 30, // null (default, means full length) | value in pixel
// 	        "tickColor": "orange" // axes, ticks and grid
// 	    }
// 	};
//
// 	micropolar.Axis() // instantiate a new axis
// 	  .config(config) // configure it
// 		.render(d3.select('#chart-sub-polar6')); // render it - use select and not body append
// }

// function loadVoltageSum() {
// 	var d;
// 	var dt1 = $("#dt1").val();
// 	var dt2 = $("#dt2").val();
//
// 	var sumvoltages = {
// 	    "method":"getTableData",
// 	    "id":1,
// 	    "params": {
// 			    "table":"Sum Voltages",
// 			    "format":"polar",
// 			    "startTime": dt1,
// 			    "endTime": dt2,
// 			    "entityId":43  // hardcoded for demo
// 	    }
// 	}
//
// 	$.ajax({
// 		method: "POST",
// 		async: false,
// 		url: "dp.py/jsonRpcRequest",
// 		data: {
// 			"jsonParam": JSON.stringify(sumvoltages)
// 		}
// 	})
// 	.done( function(dt) {
// 		d = JSON.parse(dt);
// 		$.each(d.result.data, function(i, v) {
// 			v["geometry"] = "DotPlot";
// 			v["color"] = "purple";
// 		})
// 	})
// 	.fail( function(err) {
// 		message("Error", "Failed to get getTableData data for the Polar Chart", MESSAGE_TYPE.Error);
// 	});
//
// 		var config = {
// 		"data": d.result.data,
//     "layout": {
//       "radialAxis": {
//         "domain": [0,4],
//         "orientation": -45,
//         "visible": true,
//         "gridLinesVisible": true,
//         "tickOrientation": 'horizontal',
//         "ticksSuffix": "mA"
//       },
//       "angularAxis": {
//         "domain": [0,360],
//         "visible": true,
//         "tickOrientation": "horizontal",
//         "ticksSuffix": "°"
//       },
//       "labelOffset": 15,
//       "direction": "counterclockwise",
//     },
// 	};
// 		micropolar.Axis()
// 	  .config(config)
// 	  .render(d3.select('#chart-sub-polar3'));
//
// }
